#!/usr/bin/env node
process.title = "rahvaalgatus/adm"

if (process.env.CONFIG) require("root").config =
	require("root/lib/config").read(process.env.CONFIG)
if (process.env.DB)
	require("root").sqlite = require("root/lib/sqlite")(process.env.DB)

var Express = require("root/lib/express")
var Config = require("root").config
var HttpError = require("standard-http-error")
var {runServer} = require("root/lib/http")
var t = require("root/lib/i18n").t.bind(null, "en")
var PORT = process.env.PORT || 3001
var {ENV} = process.env
var MEGABYTE = Math.pow(2, 20)
var app = module.exports = Express.new()

if (ENV == "development") {
	app.use(Express.static(__dirname + "/../public"))
	app.use(require("morgan")("dev"))
}

app.use(require("cookie-parser")(Config.cookieSecret))
app.use(require("body-parser").urlencoded({extended: true}))

app.use(require("root/lib/middleware/multipart_form_middleware")({
	fileSize: 50 * MEGABYTE,
	files: 25
}))

app.use(require("root/lib/middleware/method_override_middleware"))
app.use(require("root/lib/middleware/extension_middleware"))

app.use(function(_req, res, next) {
	res.setHeader("Cache-Control", "no-store")
  next()
})

app.use(require("root/lib/middleware/csrf_middleware"))
app.use(require("flash-fiction/express"))
app.use(require("root/lib/middleware/session_middleware"))

app.use("/", require("root/controllers/admin_controller"))
app.use(function(_req, _res, next) { next(new HttpError(404)) })
app.use(require("root/lib/middleware/error_reporter_middleware"))

app.use(require("root/lib/middleware/error_handler_middleware").bind(null,
	function(err, _req, res) {
	res.setHeader("Content-Type", "text/plain")
	if (err instanceof HttpError) res.end(err.message)
	else res.end(t("500_BODY"))
}))

if (module.parent) return
runServer(app, PORT)
