#!/usr/bin/env node
process.title = "rahvaalgatus/cli"
if (process.env.ENV == null) process.env.ENV = "development"

var Neodoc = require("neodoc")
var concat = Array.prototype.concat.bind(Array.prototype)

var USAGE_TEXT = `
Usage: cli [options] [<command> [<args>...]]

Options:
    -h, --help        Display this help and exit.
		--env=ENV         Set the environment. Defaults to $ENV or "development".
    --config=PATH     Use the given configuration instead of "config/$ENV.json".
    --db=PATH         Use the given database instead of "config/$ENV.sqlite3".

Commands:
    parliament-sync       Sync initiatives against the parliament API.
    initiatives           Manage and expire initiatives.
    initiative-end-email  Sends emails to authors for initiative deadlines.
    initiative-signatures Manage and anonmymize initiative signatures.
    initiative-signature-milestones  Records initiative signature milestones.
    expire-demo-signatures           Removes expired demo signatures.
    news-sync             Sync Eesti Koostöö Kogu news.

For more help or to give feedback, please see https://github.com/rahvaalgatus .
`

var args = Neodoc.run(USAGE_TEXT, {optionsFirst: true, versionFlags: []})
if (args["--help"]) return void process.stdout.write(USAGE_TEXT.trimLeft())

if (args["--env"] != null) process.env.ENV = args["--env"]

if (args["--config"] != null) require("root").config =
	require("root/lib/config").read(args["--config"])

if (args["--db"] != null)
	require("root").sqlite = require("root/lib/sqlite")(args["--db"])

var cmd = args["<command>"]
if (cmd == null) return void process.stdout.write(USAGE_TEXT.trimLeft())

require("root").logger = console

var CLIS = {
  "parliament-sync":
    require.resolve("root/cli/parliament_sync_cli"),
  "initiatives":
    require.resolve("root/cli/initiatives_cli"),
  "initiative-end-email":
    require.resolve("root/cli/initiative_end_email_cli"),
  "initiative-signatures":
    require.resolve("root/cli/initiative_signatures_cli"),
  "initiative-signature-milestones":
    require.resolve("root/cli/initiative_signature_milestones_cli"),
  "expire-demo-signatures":
    require.resolve("root/cli/expire_demo_signatures_cli"),
  "news-sync":
    require.resolve("root/cli/news_sync_cli")
}

var cmdPath = CLIS[cmd]
if (cmdPath == null) return void die("No such command: %s", cmd)
var cmdFn = require(cmdPath)

try { Promise.resolve(cmdFn(concat(cmd, args["<args>"]))).catch(handleError) }
catch (err) { handleError(err) }

function handleError(err) {
	require("root/lib/console_error_reporter")(err)
	console.error(err.stack.replace(/^[^\n]+\n/, ""))
	process.exitCode = 1
}

function die() {
	console.error.apply(console, arguments)
	process.exit(2)
}
